#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
# https://zhuanlan.zhihu.com/p/431751132
# Description: 玩客云折腾记录（一）：编译 ArmBian 系统
#

name: Amlogic Testbed

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      log_dir: /workdir/setup_logs

    steps:
    - name: Initialize
      run: |
        sudo -E apt-get -y -qq install git build-essential zlib1g-dev liblzma-dev python-magic binwalk

        sudo mkdir -p ${log_dir}
        sudo chown -R $USER:$GROUPS /workdir
        cd /workdir

        # cd /workdir
        ( git clone https://github.com/rampageX/firmware-mod-kit
          cd firmware-mod-kit/src
          ( (./configure && make) | tee ${log_dir}/fmk.log) 3>&1 1>&2 2>&3 | tee ${log_dir}/fmk.err.log
        ) &

        # cd /workdir
        ( git clone https://github.com/natinusala/linux-amlogic-toolkit amlogic-toolkit-natinusala
          cd amlogic-toolkit-natinusala
          ( ./bin/build | tee ${log_dir}/amlkit-natinusala.log ) 3>&1 1>&2 2>&3 | tee ${log_dir}/amlkit-natinusala.err.log
        ) &

        # cd /workdir
        ( git clone https://github.com/Eliminater74/linux-amlogic-toolkit amlogic-toolkit-Eliminater74
          cd amlogic-toolkit-Eliminater74
          ( ./bin/build | tee ${log_dir}/amlkit-Eliminater74.log ) 3>&1 1>&2 2>&3 | tee ${log_dir}/amlkit-Eliminater74.err.log
        ) &

        # cd /workdir
        ( git clone https://github.com/syvaidya/linux-amlogic-toolkit amlogic-toolkit-syvaidya
          cd amlogic-toolkit-syvaidya
          ( ./bin/build | tee ${log_dir}/amlkit-syvaidya.log ) 3>&1 1>&2 2>&3 | tee ${log_dir}/amlkit-syvaidya.err.log
        ) &

        wait

        df -hT $PWD
        # ln -sf /workdir/armbian $GITHUB_WORKSPACE/armbian

    - name: Prepare Web Service
      working-directory: /workdir
      run: |
        # cd /workdir

        # add npc
        curl -fsSL https://github.com/ehang-io/nps/releases/download/v0.26.10/linux_amd64_client.tar.gz | tar -zx npc
        
        # add file-transfer
        curl -fsSL git.io/file-transfer | sh 2>&1 | tee ${log_dir}/file-transfer.log

        # 安装 filebrowser
        curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | sudo bash
        # 创建配置数据库
        filebrowser -d ~/filebrowser.db config init
        # 设置监听地址和端口，语言和日志位置
        filebrowser -d ~/filebrowser.db config set --address 127.0.0.1 --port 80 --locale zh-cn --log /var/log/filebrowser.log
        # 设置根目录
        filebrowser -d ~/filebrowser.db config set --root /workdir
        # 添加用户
        filebrowser -d ~/filebrowser.db users add actions impassword --perm.admin
        # 启动服务
        echo
        echo '启动并将 filebrowser 挂在后台'
        nohup filebrowser -d ~/filebrowser.db &

    - name: enable SSH
      uses: mxschmitt/action-tmate@v3.11

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main