#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
# https://zhuanlan.zhihu.com/p/431751132
# Description: 玩客云折腾记录（一）：编译 ArmBian 系统
#

name: Playground - Amlogic Testbed

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      log_dir: /workdir/setup_logs

    steps:
    - name: Initialize Toolkits
      run: |
        sudo -E apt-get -y -qq install git build-essential zlib1g-dev liblzma-dev python-magic binwalk

        sudo mkdir -p ${log_dir}
        sudo chown -R $USER:$GROUPS /workdir
        cd /workdir

        # cd /workdir
        ( git clone https://github.com/rampageX/firmware-mod-kit
          cd firmware-mod-kit/src
          ( (./configure && make) | tee ${log_dir}/fmk.log) 3>&1 1>&2 2>&3 | tee ${log_dir}/fmk.err.log
        ) &

        # cd /workdir
        ( git clone https://github.com/natinusala/linux-amlogic-toolkit amlogic-toolkit-natinusala
          cd amlogic-toolkit-natinusala
          ( ./bin/build | tee ${log_dir}/amlkit-natinusala.log ) 3>&1 1>&2 2>&3 | tee ${log_dir}/amlkit-natinusala.err.log
        ) &

        # cd /workdir
        ( git clone https://github.com/Eliminater74/linux-amlogic-toolkit amlogic-toolkit-Eliminater74
          cd amlogic-toolkit-Eliminater74
          ( ./bin/build | tee ${log_dir}/amlkit-Eliminater74.log ) 3>&1 1>&2 2>&3 | tee ${log_dir}/amlkit-Eliminater74.err.log
        ) &

        # cd /workdir
        ( git clone https://github.com/syvaidya/linux-amlogic-toolkit amlogic-toolkit-syvaidya
          cd amlogic-toolkit-syvaidya
          ( ./bin/build | tee ${log_dir}/amlkit-syvaidya.log ) 3>&1 1>&2 2>&3 | tee ${log_dir}/amlkit-syvaidya.err.log
        ) &

        wait

        df -hT $PWD
        # ln -sf /workdir/armbian $GITHUB_WORKSPACE/armbian

    - name: Start SSH via ngrok
      id: ssh
      uses: 1-1-2/SSH2Actions@main
      with:
        mode: ngrok
      env:
        IN_BACKGROUND: true
        # jp, ap, us
        NGROK_REGION: jp
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}

    - name: Prepare Web Service
      working-directory: /workdir
      run: |
        # npc?
        # n2n?
        
        # add file-transfer
        curl -fsSL git.io/file-transfer | sh 2>&1 | tee ${log_dir}/file-transfer.log

        # 安装 filebrowser，端口80，工作目录/workdir
        curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | sudo bash
        filebrowser -d ~/filebrowser.db config init
        filebrowser -d ~/filebrowser.db config set --address 127.0.0.1 --port 80 --locale zh-cn --log /var/log/filebrowser.log
        filebrowser -d ~/filebrowser.db config set --root /workdir
        filebrowser -d ~/filebrowser.db users add actions impassword --perm.admin
        echo '启动并将 filebrowser 挂在后台'
        nohup filebrowser -d ~/filebrowser.db &

    - uses: debugci/setup-cloudflared@v1
    - name: Start tunnel @ trycloudflare
      run: |
        nohup cloudflared tunnel --url http://localhost:80 > ${log_dir}/cloudflared.log 2&>1 &

        time=0
        while [ ! `grep -q 'trycloudflare' ${log_dir}/cloudflared.log` ]; do
          ((time++))
          if [[ time -gt 20 ]]; then
            echo 'cloudflared可能出错了'
            break
          else
            echo '等待tunnel上线'
            sleep 1
          fi
        done

        echo "====================连接信息如下===================="
        grep --color 'trycloudflare' ${log_dir}/cloudflared.log
        echo "==================================================="

    - name: Keepalive
      run: |
        # while [[ -S ${TMATE_SOCK} ]]; do
        #     sleep 5
        #     echo
        #     if [[ -e "/tmp/continue" ]]; then
        #         echo -e "[INFO] Continue to the next step."
        #         exit 0
        #     fi
        # done
        while [[ -n $(pgrep ngrok) ]]; do
            sleep 5
            echo
            if [[ -e "/tmp/continue" ]]; then
                echo -e "[INFO] Continue to the next step."
                exit 0
            fi
        done
