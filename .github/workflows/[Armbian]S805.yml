#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
# https://zhuanlan.zhihu.com/p/431751132
# Description: 玩客云折腾记录（一）：编译 ArmBian 系统
#

name: Build Armbian - S805

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      repo_branch:
        description: '选择仓库分支(codebase-on-150balbes|codebase-on-offical)'
        required: false
        default: 'codebase-on-150balbes'
      armbian_board:
        description: '填写设备名(参见config/boards)'
        required: false
        default: 'aml-s805'
      armbian_branch:
        description: '选择配置的版本(leagcy|current|edge)'
        required: false
        default: 'current'
      ssh:
        description: '编译前进行SSH调试(true|false)'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/soulteary/armbian-build-s805
  # REPO_BRANCH: codebase-on-150balbes
  ARMBIAN_BOARD: ${{ github.event.inputs.armbian_board }}
  ARMBIAN_BRANCH: ${{ github.event.inputs.armbian_branch }}
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  UPLOAD_RELEASE: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        # sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        # sudo -E apt-get -qq update
        # sudo -E apt-get -qq autoremove --purge
        # sudo -E apt-get -qq clean
        # docker image prune -a -f
        sudo -E apt-get -y -qq install git
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        # Show config tag
        echo "::warning:: [Build Type] Board=$ARMBIAN_BOARD Branch=$ARMBIAN_BRANCH"
        df -hT $PWD
        git clone $REPO_URL -b ${{ github.event.inputs.repo_branch }} armbian
        ln -sf /workdir/armbian $GITHUB_WORKSPACE/armbian

    - name: SSH Configuration
      uses: mxschmitt/action-tmate@v3.11
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh != 'false') || contains(github.event.action, 'ssh')

    - name: Compile the firmware
      id: compile
      run: |
        cd armbian
        sudo ./compile.sh BOARD=$ARMBIAN_BOARD BRANCH=$ARMBIAN_BRANCH RELEASE=focal BUILD_MINIMAL=yes BUILD_DESKTOP=no KERNEL_ONLY=no KERNEL_CONFIGURE=no COMPRESS_OUTPUTIMAGE=sha,gpg,img USE_TORRENT=no DOWNLOAD_MIRROR=china
        # 存点变量待用
        cd output/images
        echo "IMAGE_PATH=$PWD" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: SSH Debug
      uses: mxschmitt/action-tmate@v3.11
      if: ${{ failure() }}

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload images
      uses: actions/upload-artifact@main
      if: steps.compile.conclusion == 'success'
      with:
        name: armbian_s805_${{env.ARMBIAN_BRANCH}}${{ env.FILE_DATE }}
        path: output/images

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${IMAGE_PATH} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${IMAGE_PATH} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

    - name: Generate release tag
      id: tagging
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "🔗 [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "🔗 [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tagging.conclusion == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tagging.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.IMAGE_PATH }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 30
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
