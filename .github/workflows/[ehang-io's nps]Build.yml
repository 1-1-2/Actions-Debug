#
# Ref:
# https://github.com/ehang-io/nps/blob/master/.github/workflows/release.yml
# https://github.com/ehang-io/nps/blob/master/build.sh
# 
# Description: Build nps/npc for mipsle(softfloat) using GitHub Actions
#

name: Build ehang-io/nps

on:
  workflow_dispatch:

jobs:

  build_assets:
    
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.15', '1.16', '1.17', '1.18' ]

    name: build with Go ${{ matrix.go }}
    steps:
    - name: Setup go
      uses: actions/setup-go@main
      id: go
      with:
        go-version: ${{ matrix.go }}

    - name: Checkout ehang-io/nps
      uses: actions/checkout@main
      with:
        repository: 'ehang-io/nps'

    - name: Build
      id : compile
      run: |
        export GOPROXY=direct

        # sudo apt-get update
        # sudo apt-get install gcc-mingw-w64-i686 gcc-multilib

        echo 'Loading upx binary'
        wget https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz
        tar -xvf upx-3.96-amd64_linux.tar.xz
        cp upx-3.96-amd64_linux/upx ./

        echo 'Building npc for mipsle softfloat'
        CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -trimpath -ldflags "-s -w -extldflags -static -extldflags -static" ./cmd/npc/npc.go
        upx -9 npc
        tar -czvf linux_mipsle_client.tar.gz npc conf/npc.conf conf/multi_account.conf

        echo 'Building nps for mipsle softfloat'
        CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -trimpath -ldflags "-s -w -extldflags -static -extldflags -static" ./cmd/nps/nps.go
        upx -9 nps
        tar -czvf linux_mipsle_server.tar.gz conf/nps.conf conf/tasks.json conf/clients.json conf/hosts.json conf/server.key  conf/server.pem web/views web/static nps

        ls -lah
        echo '==========colleting artifact(s)=========='
        mkdir -v artifact
        echo "ARTIFACT_PATH=$PWD/artifact" >> $GITHUB_ENV
        mv -v linux_mipsle_client.tar.gz linux_mipsle_server.tar.gz artifact/
        echo '==================Done!=================='

    - name: Upload
      uses: actions/upload-artifact@main
      if: steps.compile.conclusion == 'success'
      with:
        name: npc_Go_${{ matrix.go }}
        path: ${{ env.ARTIFACT_PATH }}

    - name: Upload to cowtransfer
      id: cowtransfer
      if: steps.compile.conclusion == 'success'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${ARTIFACT_PATH} 2>&1 | tee cowtransfer.log
        echo "::notice file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    - name: Upload to WeTransfer
      id: wetransfer
      if: steps.compile.conclusion == 'success'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${ARTIFACT_PATH} 2>&1 | tee wetransfer.log
        echo "::notice file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"